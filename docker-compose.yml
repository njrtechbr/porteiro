version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: porteiro-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-porteirob}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-porteirob}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - porteiro-network

  # Aplicação Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: porteiro-app
    restart: unless-stopped
    environment:
      # Banco de dados
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-porteirob}
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      
      # JWT e Auth
      JWT_SECRET: ${JWT_SECRET}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      
      # Next.js
      NODE_ENV: production
      PORT: 3000
      HOSTNAME: 0.0.0.0
      
      # Configurações opcionais
      RUN_SEED: ${RUN_SEED:-false}
      
    ports:
      - "${APP_PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - app_uploads:/app/uploads
    networks:
      - porteiro-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: porteiro-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - porteiro-network

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: porteiro-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - porteiro-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  nginx_logs:
    driver: local

networks:
  porteiro-network:
    driver: bridge 